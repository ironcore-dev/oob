/*
Copyright 2022.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// OOBStatusApplyConfiguration represents an declarative configuration of the OOBStatus type for use
// with apply.
type OOBStatusApplyConfiguration struct {
	UUID             *string                     `json:"uuid,omitempty"`
	Mac              *string                     `json:"mac,omitempty"`
	IP               *string                     `json:"ip,omitempty"`
	Protocol         *string                     `json:"protocol,omitempty"`
	Tags             []TagSpecApplyConfiguration `json:"tags,omitempty"`
	Port             *int                        `json:"port,omitempty"`
	Type             *string                     `json:"type,omitempty"`
	Capabilities     []string                    `json:"capabilities,omitempty"`
	Manufacturer     *string                     `json:"manufacturer,omitempty"`
	SerialNumber     *string                     `json:"serialNumber,omitempty"`
	SKU              *string                     `json:"sku,omitempty"`
	LocatorLED       *string                     `json:"locatorLED,omitempty"`
	Power            *string                     `json:"power,omitempty"`
	ShutdownDeadline *v1.Time                    `json:"shutdownDeadline,omitempty"`
	OS               *string                     `json:"os,omitempty"`
	OSReason         *string                     `json:"osReason,omitempty"`
	OSReadDeadline   *v1.Time                    `json:"osReadDeadline,omitempty"`
	Console          *string                     `json:"console,omitempty"`
	Conditions       []v1.Condition              `json:"conditions,omitempty"`
	FWVersion        *string                     `json:"fwVersion,omitempty"`
}

// OOBStatusApplyConfiguration constructs an declarative configuration of the OOBStatus type for use with
// apply.
func OOBStatus() *OOBStatusApplyConfiguration {
	return &OOBStatusApplyConfiguration{}
}

// WithUUID sets the UUID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UUID field is set to the value of the last call.
func (b *OOBStatusApplyConfiguration) WithUUID(value string) *OOBStatusApplyConfiguration {
	b.UUID = &value
	return b
}

// WithMac sets the Mac field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Mac field is set to the value of the last call.
func (b *OOBStatusApplyConfiguration) WithMac(value string) *OOBStatusApplyConfiguration {
	b.Mac = &value
	return b
}

// WithIP sets the IP field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IP field is set to the value of the last call.
func (b *OOBStatusApplyConfiguration) WithIP(value string) *OOBStatusApplyConfiguration {
	b.IP = &value
	return b
}

// WithProtocol sets the Protocol field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Protocol field is set to the value of the last call.
func (b *OOBStatusApplyConfiguration) WithProtocol(value string) *OOBStatusApplyConfiguration {
	b.Protocol = &value
	return b
}

// WithTags adds the given value to the Tags field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Tags field.
func (b *OOBStatusApplyConfiguration) WithTags(values ...*TagSpecApplyConfiguration) *OOBStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithTags")
		}
		b.Tags = append(b.Tags, *values[i])
	}
	return b
}

// WithPort sets the Port field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Port field is set to the value of the last call.
func (b *OOBStatusApplyConfiguration) WithPort(value int) *OOBStatusApplyConfiguration {
	b.Port = &value
	return b
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *OOBStatusApplyConfiguration) WithType(value string) *OOBStatusApplyConfiguration {
	b.Type = &value
	return b
}

// WithCapabilities adds the given value to the Capabilities field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Capabilities field.
func (b *OOBStatusApplyConfiguration) WithCapabilities(values ...string) *OOBStatusApplyConfiguration {
	for i := range values {
		b.Capabilities = append(b.Capabilities, values[i])
	}
	return b
}

// WithManufacturer sets the Manufacturer field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Manufacturer field is set to the value of the last call.
func (b *OOBStatusApplyConfiguration) WithManufacturer(value string) *OOBStatusApplyConfiguration {
	b.Manufacturer = &value
	return b
}

// WithSerialNumber sets the SerialNumber field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SerialNumber field is set to the value of the last call.
func (b *OOBStatusApplyConfiguration) WithSerialNumber(value string) *OOBStatusApplyConfiguration {
	b.SerialNumber = &value
	return b
}

// WithSKU sets the SKU field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SKU field is set to the value of the last call.
func (b *OOBStatusApplyConfiguration) WithSKU(value string) *OOBStatusApplyConfiguration {
	b.SKU = &value
	return b
}

// WithLocatorLED sets the LocatorLED field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LocatorLED field is set to the value of the last call.
func (b *OOBStatusApplyConfiguration) WithLocatorLED(value string) *OOBStatusApplyConfiguration {
	b.LocatorLED = &value
	return b
}

// WithPower sets the Power field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Power field is set to the value of the last call.
func (b *OOBStatusApplyConfiguration) WithPower(value string) *OOBStatusApplyConfiguration {
	b.Power = &value
	return b
}

// WithShutdownDeadline sets the ShutdownDeadline field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ShutdownDeadline field is set to the value of the last call.
func (b *OOBStatusApplyConfiguration) WithShutdownDeadline(value v1.Time) *OOBStatusApplyConfiguration {
	b.ShutdownDeadline = &value
	return b
}

// WithOS sets the OS field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the OS field is set to the value of the last call.
func (b *OOBStatusApplyConfiguration) WithOS(value string) *OOBStatusApplyConfiguration {
	b.OS = &value
	return b
}

// WithOSReason sets the OSReason field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the OSReason field is set to the value of the last call.
func (b *OOBStatusApplyConfiguration) WithOSReason(value string) *OOBStatusApplyConfiguration {
	b.OSReason = &value
	return b
}

// WithOSReadDeadline sets the OSReadDeadline field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the OSReadDeadline field is set to the value of the last call.
func (b *OOBStatusApplyConfiguration) WithOSReadDeadline(value v1.Time) *OOBStatusApplyConfiguration {
	b.OSReadDeadline = &value
	return b
}

// WithConsole sets the Console field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Console field is set to the value of the last call.
func (b *OOBStatusApplyConfiguration) WithConsole(value string) *OOBStatusApplyConfiguration {
	b.Console = &value
	return b
}

// WithConditions adds the given value to the Conditions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Conditions field.
func (b *OOBStatusApplyConfiguration) WithConditions(values ...v1.Condition) *OOBStatusApplyConfiguration {
	for i := range values {
		b.Conditions = append(b.Conditions, values[i])
	}
	return b
}

// WithFWVersion sets the FWVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FWVersion field is set to the value of the last call.
func (b *OOBStatusApplyConfiguration) WithFWVersion(value string) *OOBStatusApplyConfiguration {
	b.FWVersion = &value
	return b
}
